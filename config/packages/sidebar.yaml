################################################################################
#
# @author      : Thomas Maxson
# @package     : Templates
# @description :
#
################################################################################

template:
  - sensor:
      - unique_id: sidebar
        state: template
        attributes:
          time: >
            {%- set hours = now().strftime( '%I' ) %}
            {%- set minutes = now().strftime( '%M' ) %}

            {{ hours }}<span class="time-colon">:</span>{{ minutes }}

          date: |
            {%- set weekday = now().strftime( '%A' ) %}
            {%- set month = now().strftime( '%B' ) %}

            {{ weekday }},<br>
            {{ month }} {{ now().day }}

          greeting: |
            {%- set time = now().hour %}

            {%- if time <= 5 -%}
              Good Night

            {%- elif time <= 11 -%}
              Good Morning

            {%- elif time <= 19 -%}
              Good Afternoon

            {%- else %}
              Good Evening

            {%- endif -%}

          weather: |
            {%- if is_state( 'input_boolean.sidebar_display_weather_forecast', 'on' ) %}
              {%- set ignore = [ 'null', 'unknown', 'unavailable' ] -%}
              {%- set temperature = states( 'sensor.pirateweather_temperature' ) %}

              {%- if temperature not in ignore %}
                It is currently {{ temperature | round }}Â°

                {%- if is_state( 'weather.pirateweather', 'rainy' ) %}
                  {{ [
                    'with expected rain', 
                    'with expected showers'
                  ] | random }}

                {%- elif is_state( 'weather.pirateweather', 'cloudy' ) %}
                  {{ [
                    'with clouds', 
                    'with cloudy skies'
                  ] | random }}

                {%- elif is_state( 'weather.pirateweather', 'partlycloudy' ) %}
                  {{ [
                    'with some clouds', 
                    'with partly cloudy skies',
                    'with scattered clouds'
                  ] | random }}

                {%- else %}
                  {%- if is_state( 'sun.sun', 'above_horizon' ) %}
                    {{ [
                      'and sunny', 
                      'with sunshine'
                    ] | random }}

                  {%- else %}
                    {{ [
                      'and clear', 
                      'with clear skies'
                    ] | random }}

                  {%- endif %}
                {%- endif %}

              {%- else %}
                Unable to load weather information

              {%- endif %}
            {%- endif %}

          holiday: |
            {%- if is_state( 'input_boolean.sidebar_display_holidays', 'on' ) %}
              {%- if states.calendar.holidays_in_united_states.state == 'on' %}
                Today is {{ states.calendar.holidays_in_united_states.attributes.message }}

              {%- endif %}
            {%- endif %}

          birthday: |
            {%- if is_state( 'input_boolean.sidebar_display_celebrations', 'on' ) %}
              {%- if states.calendar.birthdays.state == 'on' %}
                Today is {{ states.calendar.birthdays.attributes.message }}. {{ [
                  'Ready for another lap around the sun?',
                  'They can cry if they want to.',
                  'The confetti cannon is ready.',
                  'I hope the cake is tasty.'
                ] | random }}
              {%- endif %}
            {%- endif %}

          neighborhood: |
            {%- if is_state( 'input_boolean.sidebar_display_neighborhood', 'on' ) %}
              {%- if states.calendar.regency_lakes.state == 'on' %}
                {%- set message = states.calendar.regency_lakes.attributes.message %}
                {%- set description = states.calendar.regency_lakes.attributes.description %}

                {%- if description != '' %}
                  {{ description }}

                {%- elif message != '' %}
                  {{ message }} in {{ [
                    'your neighborhood', 
                    'Regency Lakes', 
                    'Osprey Point'
                  ] | random }} today

                {%- endif %}
              {%- endif %}
            {%- endif %}

          lights_on: |
            {%- if is_state( 'input_boolean.sidebar_display_lights_on', 'on' ) %}
              {%- set output = [] -%}
              {%- set item_count = 0 -%}
              {%- set ignore = [ '0', 'off', 'unknown', 'unavailable' ] -%}

              {%- set lights_on = states( 'sensor.total_lights_on' ) %}
              {%- set status_lights_on = iif( ( lights_on not in ignore ), true, false ) -%}
              {%- set item_count = lights_on | int %}

              {%- set garage_fan_on = states( 'light.garage_fan' ) %}
              {%- set status_garage_fan_on = iif( ( garage_fan_on not in ignore ), true, false ) -%}

              {%- if ( true == status_lights_on ) -%}
                {%- set output = output + [ iif( ( 1 == item_count ), lights_on + ' light', lights_on + ' lights' ) ] -%}
              {%- endif -%}

              {%- if ( true == status_garage_fan_on ) -%}
                {%- set output = output + [ iif( ( 0 == item_count ), 'The garage fan', 'garage fan' ) ] -%}
                {%- set item_count = item_count + 1 %}
              {%- endif -%}

              {%- set verb = iif( ( 1 == item_count ), 'is', 'are' ) -%}

              {%- if output | length == 1 -%}
                {{ output | join( '' ) }} {{ verb }} on
              {%- elif output | length >= 2 -%}
                {%- for e in output -%}
                  {% if loop.first %}
                    {{ e }}
                  {% elif loop.last %}
                    and the {{ e }} {{ verb }} on
                  {% else %}
                    the {{ e }}, 
                  {% endif %}

                {%- endfor -%}
              {%- endif -%}
            {% endif %}

          doors_open: |
            {%- set ignore = [ 'off', '0', 'unknown', 'unavailable' ] -%}
            {%- set count = states( 'sensor.total_doors_open' ) %}

            {%- if count not in ignore and is_state( 'input_boolean.sidebar_display_doors_open', 'on' ) %}
              {{ iif( ( '1' == count ), count + ' door is open', count + ' doors are open' ) }}

            {%- endif %}

          exterior_open_doors: >-
            {%- if is_state( 'input_boolean.sidebar_display_exterior_door_status', 'on' ) %}
              {%- set ns = namespace( output = [] ) -%}
              {%- set state_lock_front  = states( 'lock.front_door' ) -%}
              {%- set ignore_lock_front = [ 'null', 'locked', 'unknown', 'unavailable' ] -%}

              {%- set state_door_front_primary   = states( 'binary_sensor.door_front_primary' ) -%}
              {%- set state_door_front_secondary = states( 'binary_sensor.door_front_secondary' ) -%}
              {%- set ignore_door_front = [ 'null', 'off', 'unknown', 'unavailable' ] -%}

              {%- set state_cover_garage = states( 'cover.garage_door' ) -%}
              {%- set ignore_cover_garage = [ 'null', 'closed', 'unknown', 'unavailable' ] -%}

              {%- set state_door_garage  = states( 'binary_sensor.door_garage' ) -%}
              {%- set ignore_door_garage = [ 'null', 'off', 'unknown', 'unavailable' ] -%}

              {%- set state_door_sliding = states( 'binary_sensor.door_living' ) -%}
              {%- set ignore_door_sliding = [ 'null', 'off', 'unknown', 'unavailable' ] -%}

              {%- set status_lock_front           = iif( ( state_lock_front not in ignore_lock_front ), true, false ) -%}
              {%- set status_door_front_primary   = iif( ( state_door_front_primary not in ignore_door_front ), true, false ) -%}
              {%- set status_door_front_secondary = iif( ( state_door_front_secondary not in ignore_door_front ), true, false ) -%}
              {%- set status_cover_garage         = iif( ( state_cover_garage not in ignore_cover_garage ), true, false ) -%}
              {%- set status_door_garage          = iif( ( state_door_garage not in ignore_door_garage ), true, false ) -%}
              {%- set status_door_sliding         = iif( ( state_door_sliding not in ignore_door_sliding ), true, false ) -%}

              {%- if ( true == status_door_front_primary and true == status_door_front_secondary ) -%}
                {%- set ns.output = [ 'front doors are open' ] -%}
              {%- elif ( true == status_door_front_primary or true == status_door_front_secondary ) -%} 
                {%- set ns.output = ns.output + [ 'front door is open' ] -%}
              {%- elif ( true == status_lock_front ) -%}
                {%- set ns.output = ns.output + [ 'front door is ' + state_lock_front ] -%}
              {%- endif -%}

              {%- if ( true == status_cover_garage ) -%}
                {%- set ns.output = ns.output + [ 'garage door is ' + state_cover_garage ] -%}
              {%- endif -%}

              {%- if ( true == status_door_garage ) -%}
                {%- set ns.output = ns.output + [ 'interior garage door is open' ] -%}
              {%- endif -%}

              {%- if ( true == status_door_sliding ) -%}
                {%- set ns.output = ns.output + [ 'sliding glass door is open' ] -%}
              {%- endif -%}

              {%- if ns.output | length == 1 -%}
                The {{ ns.output | join( '' ) }}.
              {%- elif ns.output | length >= 2 -%}
                {% for e in ns.output %}
                  {% if loop.first %}
                    The {{ e }}, 
                  {% elif loop.last %}
                    and the {{ e }}
                  {% else %}
                    the {{ e }}, 
                  {% endif %}
                  
                {% endfor %}
              {%- endif -%}
            {%- endif %}

          waste: |
            {%- if is_state( 'input_boolean.sidebar_display_waste_reminder', 'on' ) -%}
              {%- set ignore = [ null, 'off', 'unknown', 'unavailable' ] -%}

              {%- set state_take_out_solid   = states( 'schedule.waste_take_out_solid' ) %}
              {%- set state_take_out_bulk    = states( 'schedule.waste_take_out_bulk' ) %}
              {%- set state_bring_in_solid   = states( 'schedule.waste_bring_in_solid' ) %}

              {%- set is_take_out_solid   = iif( ( state_take_out_solid not in ignore ), true, false ) -%}
              {%- set is_take_out_bulk    = iif( ( state_take_out_bulk not in ignore ), true, false ) -%}
              {%- set is_bring_in_solid   = iif( ( state_bring_in_solid not in ignore ), true, false ) -%}

              {%- if ( ( is_take_out_solid ) and ( is_take_out_bulk ) ) -%}
                {{ [ 
                  'Tomorrow is the big day: trash and bulk trash day! ',
                  'Trash and bulk trash should go out before tomorrow morning. ',
                  'Do not forget to take the trash and bulk trash out. '
                ] | random }}

              {%- elif ( is_take_out_solid ) -%}
                {{ [ 
                  'Tomorrow is the big day, trash day! ',
                  'Trash should go out before tomorrow morning. ',
                  'Do not forget to take the trash out. '
                ] | random }}

              {%- elif ( is_take_out_bulk ) -%}
                {{ [ 
                  'Tomorrow is the big day, bulk trash day! ',
                  'Bulk trash should go out before tomorrow morning. ',
                  'Do not forget to take the bulk trash out. '
                ] | random }}

              {%- endif -%}


              {%- if ( is_bring_in_solid ) -%}
                {{ [ 
                  'Do not forget to bring the trash bins in.',
                  'The trash bins will feel lonely if you leave them outside.',
                  'The HOA will get mad if you leave the trash bins out on the street.'
                ] | random }}

              {%- endif -%}
            {%- endif -%}

          recycle: |
            {%- if is_state( 'input_boolean.sidebar_display_recycle_reminder', 'on' ) -%}
              {%- set ignore = [ null, 'off', 'unknown', 'unavailable' ] -%}

              {%- set state_take_out_recycle = states( 'schedule.waste_take_out_recycle' ) %}
              {%- set state_bring_in_recycle = states( 'schedule.waste_bring_in_recycle' ) %}

              {%- set is_take_out_recycle = iif( ( state_take_out_recycle not in ignore ), true, false ) -%}
              {%- set is_bring_in_recycle = iif( ( state_bring_in_recycle not in ignore ), true, false ) -%}

              {%- if ( is_take_out_recycle ) -%}
                {{ [ 
                  'Tomorrow is the big day, recycling day! '
                ] | random }}

              {%- endif -%}


              {%- if ( is_bring_in_recycle ) -%}
                {{ [ 
                  'Do not forget to take the recycling to the drop-off center.'
                ] | random }}

              {%- endif -%}
            {%- endif -%}
