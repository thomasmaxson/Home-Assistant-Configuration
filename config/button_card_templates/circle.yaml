################################################################################
#
# @author      : Thomas Maxson
# @package     : Button Card Templates, Circle
# @description :
#
################################################################################

circle:
  styles:
    card:
      - --c-stroke-color: "#b0b0b0"
      - --c-fill-color: none
      - --c-stroke-width: 2.3
      - --c-font-color: "#97989c"
      - --c-font-size: 14px
      - --c-unit-font-size: 10.5px
      - --c-font-weight: 400
      - --c-letter-spacing: -0.02rem
    custom_fields:
      circle:
        - display: initial
        - width: 88%
        - margin: 0% 2% 0 0
        - justify-self: end
        - opacity: 1
  custom_fields:
    circle: >
      [[[
        const r = 22.1;
        const c = r * 2 * Math.PI;

        const state  = variables.state;
        const domain = entity.entity_id.split('.')[0];

        const calc_percent = ( domain === 'switch' ) ? 100 : variables.circle_percent;
        const calc_value   = variables.circle_value || calc_percent;
        const calc_unit    = variables.circle_value_unit || '';

        let circle = ( value, percent, unit ) => {
          return `
            <svg viewBox="0 0 50 50">
              <style>
                #circle_stroke {
                  transform: rotate( -90deg );
                  transform-origin: 50% 50%;
                  stroke-dasharray: ${c};
                  stroke-dashoffset: ${typeof percent === 'number' && c - percent / 100 * c};
                  stroke-width: var( --c-stroke-width );
                  stroke: var( --c-stroke-color );
                  fill: var( --c-fill-color );
                }
                #circle_value {
                  font-size: var( --c-font-size );
                  font-weight: var( --c-font-weight );
                  letter-spacing: var( --c-letter-spacing );
                  fill: var( --c-font-color );
                }
                #circle_symbol {
                  font-size: var( --c-unit-font-size );
                }
                #circle_value, 
                #circle_symbol {
                  text-anchor: middle;
                  dominant-baseline: central;
                }
              </style>
              <circle id="circle_stroke" cx="25" cy="25" r="${r}"/>
              <text id="circle_value" x="50%" y="52%">
                ${value}<tspan id="circle_symbol" dx=".2" dy="-.4">${unit}</tspan>
              </text>
            </svg>
          `;
        }

        if( variables.state_on )
        { 
          return circle( calc_value, calc_percent, calc_unit );

        }
      ]]]
